enum LocationType {
  INSIDE
  OUTSIDE
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  nickname        String
  createdAt       DateTime          @default(now())
  simpleReviews   SimpleReviews[]
  detailedReviews DetailedReviews[]
  authentication  Authentication?
}

model Places {
  id                  Int               @id @default(autoincrement())
  title               String
  regionId            Int?
  address             String
  category            String?
  thumUrl             String?
  telephone           String?
  stars               String?
  naverPlaceId        String?
  naverStars          String?
  naverReviewerCounts String?
  naverReview         NaverReviews[]
  simpleReviews       SimpleReviews[]
  detailedReviews     DetailedReviews[]
  region              Regions?          @relation(fields: [regionId], references: [id])
}

model NaverReviews {
  id          Int    @id @default(autoincrement())
  placeId     Int
  description String
  place       Places @relation(fields: [placeId], references: [id], onDelete: Cascade)
}

model SimpleReviews {
  id          Int      @id @default(autoincrement())
  placeId     Int
  userId      Int
  stars       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  place       Places   @relation(fields: [placeId], references: [id])
  user        Users    @relation(fields: [userId], references: [id])
}

model DetailedReviews {
  id          Int           @id @default(autoincrement())
  placeId     Int
  userId      Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  isUnisex    Boolean?
  location    LocationType?
  description String?
  user        Users         @relation(fields: [userId], references: [id])
  place       Places        @relation(fields: [placeId], references: [id])
}

model Authentication {
  id          Int    @id @default(autoincrement())
  userId      Int    @unique
  password    String
  failedCount Int    @default(0)
  user        Users  @relation(fields: [userId], references: [id])
}

model Regions {
  id                      Int      @id @default(autoincrement())
  administrative_district String
  district                String?
  place                   Places[]
}
