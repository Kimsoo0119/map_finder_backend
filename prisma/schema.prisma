enum LocationType {
  INSIDE
  OUTSIDE
}

enum SignUpType {
  LOCAL
  KAKAO
  GOOGLE
  NAVER
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  nickname         String            @unique
  created_at       DateTime          @default(now())
  sign_up_type     SignUpType
  simple_reviews   SimpleReviews[]
  detailed_reviews DetailedReviews[]
  authentication   Authentication?
}

model Places {
  id                    Int               @id @default(autoincrement())
  title                 String
  region_id             Int?
  address               String
  category              String?
  thum_url              String?
  telephone             String?
  stars                 String?
  naver_place_id        String?
  naver_stars           String?
  naver_reviewer_counts String?
  naver_review          NaverReviews[]
  simple_reviews        SimpleReviews[]
  detailed_reviews      DetailedReviews[]
  region                Regions?          @relation(fields: [region_id], references: [id])
}

model NaverReviews {
  id          Int    @id @default(autoincrement())
  place_id    Int
  description String
  place       Places @relation(fields: [place_id], references: [id], onDelete: Cascade)
}

model SimpleReviews {
  id          Int      @id @default(autoincrement())
  user_id     Int
  place_id    Int
  stars       Float
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  description String?
  place       Places   @relation(fields: [place_id], references: [id])
  user        Users    @relation(fields: [user_id], references: [id])
}

model DetailedReviews {
  id          Int           @id @default(autoincrement())
  place_id    Int
  user_id     Int
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  is_unisex   Boolean?
  location    LocationType?
  description String?
  user        Users         @relation(fields: [user_id], references: [id])
  place       Places        @relation(fields: [place_id], references: [id])
}

model Authentication {
  id           Int    @id @default(autoincrement())
  user_id      Int    @unique
  password     String
  failed_count Int    @default(0)
  user         Users  @relation(fields: [user_id], references: [id])
}

model Regions {
  id                      Int      @id @default(autoincrement())
  administrative_district String
  district                String?
  place                   Places[]
}
