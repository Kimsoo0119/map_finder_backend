enum LocationType {
  INSIDE
  OUTSIDE
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  nickname  String
  name      String?
  createdAt DateTime @default(now())
  simpleReviews    SimpleReviews[]
  detailedReviews    DetailedReviews[]
}

model Places {
  id                  Int           @id @default(autoincrement())
  title               String
  address             String
  category            String
  telephone           String?
  stars               String?
  naverStars          String?
  naverReviewerCounts String?
  naverReview         NaverReviews[]
  simpleReviews    SimpleReviews[]
  detailedReviews    DetailedReviews[]
}

model NaverReviews {
  id          Int    @id @default(autoincrement())
  placeId     Int
  description String
  place       Places  @relation(fields: [placeId], references: [id], onDelete: Cascade)
}

model SimpleReviews {
  id          Int    @id @default(autoincrement())
  placeId     Int
  userId      Int
  description String?
  stars       Float
  place       Places  @relation(fields: [placeId], references: [id])
  user        Users   @relation(fields: [userId], references: [id])
}

model DetailedReviews {
  id          Int @id @default(autoincrement())
  placeId     Int
  userId      Int
  isUnisex    Boolean?
  location    LocationType?
  description String?
  user        Users @relation(fields: [userId], references: [id])
  place       Places  @relation(fields: [placeId], references: [id])
}
