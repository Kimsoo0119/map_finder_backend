enum LocationType {
  INSIDE
  OUTSIDE
}

enum SignUpType {
  LOCAL
  KAKAO
  GOOGLE
  NAVER
}

enum Emoji {
  LIKE
  HELPFUL
  SMILE
  SAD
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                  Int                 @id @default(autoincrement())
  email               String              @unique
  nickname            String              @unique
  created_at          DateTime            @default(now())
  sign_up_type        SignUpType
  authentication      Authentication?
  toilet_reviews      ToiletReviews[]
  toilet_review_emoji ToiletReviewEmoji[]
}

model Places {
  id                    Int             @id @default(autoincrement())
  title                 String
  region_id             Int?
  address               String
  category              String?
  thum_url              String?
  telephone             String?
  stars                 String?
  naver_place_id        String?
  naver_stars           String?
  naver_reviewer_counts String?
  naver_review          NaverReviews[]
  toilet_reviews        ToiletReviews[]
  region                Regions?        @relation(fields: [region_id], references: [id])
}

model NaverReviews {
  id          Int    @id @default(autoincrement())
  place_id    Int
  description String
  place       Places @relation(fields: [place_id], references: [id], onDelete: Cascade)
}

model Authentication {
  id           Int    @id @default(autoincrement())
  user_id      Int    @unique
  password     String
  failed_count Int    @default(0)
  user         Users  @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Regions {
  id                      Int      @id @default(autoincrement())
  administrative_district String
  district                String?
  place                   Places[]
}

model ToiletReviews {
  id                  Int                 @id @default(autoincrement())
  place_id            Int
  user_id             Int
  stars               Float
  created_at          DateTime            @default(now())
  updated_at          DateTime            @updatedAt
  is_unisex           Boolean?
  description         String?
  visited_at          DateTime?
  location            LocationType?
  like_count          Int                 @default(0)
  helpful_count       Int                 @default(0)
  smile_count         Int                 @default(0)
  sad_count           Int                 @default(0)
  user                Users               @relation(fields: [user_id], references: [id], onDelete: Cascade)
  place               Places              @relation(fields: [place_id], references: [id])
  toilet_review_emoji ToiletReviewEmoji[]

  @@unique([place_id, user_id])
}

model ToiletReviewEmoji {
  id               Int           @id @default(autoincrement())
  toilet_review_id Int
  user_id          Int
  emoji            Emoji
  toilet_reviews   ToiletReviews @relation(fields: [toilet_review_id], references: [id], onDelete: Cascade)
  user             Users         @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([toilet_review_id, user_id])
}
